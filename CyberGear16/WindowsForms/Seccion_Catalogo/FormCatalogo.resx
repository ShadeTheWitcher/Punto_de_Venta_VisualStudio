<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>