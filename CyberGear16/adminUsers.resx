<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAHYbAAB2GwH1ht6VAAADe0lE
        QVR4Xu2b3WoTQRiGF2zBC9AT8R78AREKguDVeOA1qDegqYKKoghVr0APBA8U9ECthrZqi1KzaVYJTZtN
        RBA9Gb93kui6vrs7m+xvdwsPlK+Tme975mdnC7GsxY5lNewzwjPhm6CMuGyrw7e2VNNx1e5gqHpuMqAv
        UzA2ckAuntx+CevCOWG/YIX/jIr/KHg7iSYFAd3+UK19cXWfYaDNtrTF70TAhO/CeavRipDQsJ+OPxCP
        hAWgj1Up7MR9Rx2SftE3A39Dm3dfXbUSLgD8EC6GS2jYw3HjeKQg4J8ZDQFtULyBAAAJF4Il8A9FM04k
        NQFsTBBfAAhZCfwD0ZRLAAiQwBtHUz4BgEjgDaMppwDgk8AbRVNeAQAS5BEp9wRPMB7lFgBwTzhbZQFg
        reoCflZdgKoF0KAJtYACCJCXp1wFHLjRVs9bfdVPQ0AQl2x1bMlRn7cH6oXd1znoOMvRBBo0ZN+irW6+
        7anBkBcVBwgweR0+KsXfXdnRY15d7ukcWG7G0KApYh4Jv9pylSsJYSWgkGnBPzkm7/lBYOZR/Mu2q44s
        dWabfUCDMTl+z1HX3vT0ksQyngVWtBeMgZnXxZNcYkODcZFZmJeliP3Ilm2SYIw5LPtZZ34CDU4LksoC
        Nva00GCVoMEqQYNVggarBA0GwQ6kIsJyD4IG/Uin81dsdTCDx9ysxH5M0qAX6ejkA0fdbspFR+797PJS
        JPBugus5bqi0Hj80OGFc/HLH1ddPdn0tGriOI9fXcj3HDTVyJdDgmDlZ9pj5JF52sgbvJrie6+1AavsD
        DQIxhz2PZQ+zbJAig5WA9wbUELoKaBDIh3CoYF+VUQByRu6ooRZQCyD1TaBBMKWA7q6rujspIX2zMRm5
        CECC7zfbavVTKxXQt6mEfATILCHR5sZmKqBvjMHG9lMLyEVA1bcAQIL6wEoDw+JBbgKKQi0gawGpLn0/
        BlshUwFIKM3Dz4/JYZitAJkVJMYeXWmAsTAmy2VCLSBTAVXfAgAJ6QMqCyKKB5kLKBq1gLwFJLolDJa8
        n1wFIOEkD0WTQ89PvgJk1pA4e4RNA/pCn2ysIGoBuQqo+hYASFgfYEkQs3iQu4C8qQXUAswFDP4LgmoI
        GEDAE19wRDUEPISA08KGJzhi7wv4ICxY1nUHEk4Jj4W/X5/fuwLwXelHwoJ1p2X9BmGe32bnv8jAAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>